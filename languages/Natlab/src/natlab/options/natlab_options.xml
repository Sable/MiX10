<?xml-sheet type="text/xsl" href="soot_options.xsl"  ?>
<!-- =========================================================================== -->
<!--                                                                             -->
<!-- Copyright 2008-2011 Andrew Casey, Jun Li, Jesse Doherty,                    -->
<!--   Maxime Chevalier-Boisvert, Toheed Aslam, Anton Dubrau, Nurudeen Lameed,   -->
<!--   Amina Aslam, Rahul Garg, Soroush Radpour, Olivier Savary Belanger,        -->
<!--   Laurie Hendren, Clark Verbrugge and McGill University.                    -->
<!--                                                                             -->
<!--   Licensed under the Apache License, Version 2.0 (the "License");           -->
<!--   you may not use this file except in compliance with the License.          -->
<!--   You may obtain a copy of the License at                                   -->
<!--                                                                             -->
<!--       http://www.apache.org/licenses/LICENSE-2.0                            -->
<!--                                                                             -->
<!--   Unless required by applicable law or agreed to in writing, software       -->
<!--   distributed under the License is distributed on an "AS IS" BASIS,         -->
<!--   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  -->
<!--   See the License for the specific language governing permissions and       -->
<!--   limitations under the License.                                            -->
<!--                                                                             -->
<!-- =========================================================================== -->
<options>
  <intro>
    <p>Natlab</p>
  </intro>
  <section>
    <name>General Options</name>
    <boolopt>
      <name>Help</name>
      <alias>h</alias>
      <alias>help</alias>
      <short_desc>Display help and exit</short_desc>
      <long_desc>
        Display the textual help message and exit immediately without
        furthur processing.
      </long_desc>
    </boolopt>
    <boolopt>
      <name>Exhaustive</name>
      <alias>e</alias>
      <short_desc>file list is exhaustive</short_desc>
      <long_desc>
        The Provided list of files represents all files that will be in the execution 
environment.
      </long_desc>
    </boolopt>
    <boolopt>
      <name>Dynamic linking</name>
      <alias>d</alias>
      <short_desc>Force dynamic linking</short_desc>
      <long_desc>
No static linking is done.
      </long_desc>
    </boolopt>
    <boolopt>
      <name>Prettyprint</name>
      <alias>pretty</alias>
      <short_desc>Prettyprint the files</short_desc>
      <long_desc>Prettyprints the input files. Overides all other
      options.</long_desc>
    </boolopt>
    <boolopt>
      <name>XML IR</name>
      <alias>x</alias>
      <alias>xml</alias>
      <short_desc>Prints the xml IR</short_desc>
      <long_desc>Print the XML IR after performing various
      transformations.</long_desc>
    </boolopt>
    <boolopt>
      <name>Matlab Input</name>
      <alias>m</alias>
      <alias>matlab</alias>
      <short_desc>Use Matlab files as input</short_desc>
      <long_desc>Use Matlab files as input rather than Natlab ones.</long_desc>
    </boolopt>
    <boolopt>
      <name>Quiet mode</name>
      <alias>quiet</alias>
      <short_desc>Suppress all information messages</short_desc>
      <long_desc>All messages will be suppressed, unless an error occurs. </long_desc>
    </boolopt>
    <!--boolopt>
      <name>Aspect Mode</name>
      <alias>a</alias>
      <alias>aspect</alias>
      <short_desc>Use Natlab and Aspect files</short_desc>
      <long_desc>Use Aspect files to weave into Natlab files.</long_desc>
    </boolopt -->
    <stropt>
      <name>Output Directory</name>
      <set_arg_label>dir</set_arg_label>
      <alias>outdir</alias>
      <alias>od</alias>
      <short_desc>Output everything to this dir rather than stdout</short_desc>
      <long_desc>Each file is outputted to a file of the same name in
      the given directory. The path of the input file is ignored when outputting.</long_desc>
    </stropt>
  </section>
  <section>
    <name>Server options</name>
    <boolopt>
      <name>Server mode</name>
      <alias>server</alias>
      <short_desc>Run frontend in server mode on a given port, default is 47146</short_desc>
      <long_desc>Run the frontend as a server. Opens a socket on a
        given port and waits for XML encoded commands.</long_desc>
    </boolopt>
    <stropt>
      <name>Server port</name>
      <set_arg_label>port</set_arg_label>
      <alias>sport</alias>
      <alias>sp</alias>
      <short_desc>Set the port the server runs on</short_desc>
      <long_desc>Set the server to run on a given port. Default is 47146.</long_desc>
    </stropt>
    <boolopt>
      <name>No heartbeat</name>
      <alias>nh</alias>
      <alias>noheart</alias>
      <short_desc>Turns off the need for a heartbeat signal</short_desc>
      <long_desc>The server will no longer try to detect broken connections
        using a the heartbeat signal.</long_desc>
    </boolopt>
  </section>
  
  <section>
    <name>Directory Search</name>
    <boolopt>
      <name>DirectorySearch Options</name>
      <alias>dir</alias>      
      <short_desc>Run Dependence Analysis on the files in the given directory</short_desc>
      <long_desc>
        Run Dependence Analysis on the input file in a given directory to figure out dependence relations.Starting from the driver file.
      </long_desc>  
    </boolopt>
    <name>DependenceTester Options</name>
    <boolopt>
      <name>DependenceAnalysis</name>
      <alias>danalysis</alias>      
      <short_desc>Run Dependence Analysis on the input file</short_desc>
      <long_desc>
        Run Dependence Analysis on the input file to figure out dependence relations.
      </long_desc>  
    </boolopt>
    <boolopt>
      <name>Prof</name>
      <alias>prof</alias>      
      <short_desc>Run profiler on the input file</short_desc>
      <long_desc>
        Run profiler on the input file to instrument code.
      </long_desc>
    </boolopt>    
    <boolopt>
      <name>auto</name>
      <alias>auto</alias>      
      <short_desc>Apply loop transformations automatically</short_desc>
      <long_desc>
        Apply loop transformations automatically.
      </long_desc>
    </boolopt>
    <boolopt>
      <name>anno</name>
      <alias>anno</alias>      
      <short_desc>Apply annotated loop transformations</short_desc>
      <long_desc>
        Apply annotated loop transformations.
      </long_desc>
    </boolopt>
    <boolopt>
      <name>Heur</name>
      <alias>heur</alias>      
      <short_desc>Invoke heuristic engine to predict range data</short_desc>
      <long_desc>
        Invoke heuristic engine component to predict range data.
      </long_desc>
    </boolopt>
    <boolopt>
      <name>Rda</name>
      <alias>rda</alias>      
      <short_desc>Do run time dependence analysis on the input file</short_desc>
      <long_desc>
        Do run time dependence analysis on the input file.
      </long_desc>
    </boolopt>    
    <boolopt>
      <name>Sda</name>
      <alias>sda</alias>      
      <short_desc>Do  static dependence analysis on the input file</short_desc>
      <long_desc>
        Do static dependence analysis on the input file using the precomputed information.
      </long_desc>
    </boolopt>    
    <boolopt>
      <name>GCD</name>
      <alias>gcd</alias>      
      <short_desc>Run Gcd test on the input file</short_desc>
      <long_desc>
        Run Gcd Test on the loops in the input file to figure out dependence relations.
      </long_desc>
    </boolopt>
    <boolopt>
      <name>BanerJee's Test</name>
      <alias>bj</alias>      
      <short_desc>Run Banerjee test on the input file</short_desc>
      <long_desc>
        Run Banerjee's Test on the loops in the input file to figure out dependence relations.
      </long_desc>
    </boolopt>
  </section>


  <!-- static stuff ********************************************** -->
  <section>
    <name>Static/Fortran Generator Options</name>
    <boolopt>
      <name>Generate Fortran</name>
      <alias>f</alias>
      <alias>fortran</alias>
      <short_desc>Generates fortran code</short_desc>
      <long_desc>
        Run the fortran code generator to produce a fortran code
        representation of the input sounce.
      </long_desc>
    </boolopt>
		<multiopt>
			<name>static</name>
			<alias>static</alias>
			<alias>static phases</alias>
				<value>
					<name>collect</name>
					<alias>c</alias>
					<alias>collect</alias>
					<short_desc>collects all required .m files, and flattens output into one directory</short_desc>
				</value>
				<value>
					<name>transform to IR</name>
					<alias>ir</alias>
					<short_desc>outputs files after IR transformation</short_desc>
				</value>
			<default>none</default>
			<short_desc>Performs static compiler passes up to specified pass and outputs files</short_desc>
			<long_desc>This option ...</long_desc>
		</multiopt>
  </section>
  <section>
    <name>Testing</name>
    <boolopt>
      <name>Var or function preorder test</name>
      <alias>vfpreorder</alias>
    </boolopt>
  </section>
<!--
  <section>
    <name>621 options</name>
    <boolopt>
      <name>run analysis</name>
      <alias>run</alias>
    </boolopt>
  </section>
 -->


  <section>
    <name>play</name>
    <boolopt>
      <name>play</name>
      <alias>play</alias>
    </boolopt>
    <boolopt>
      <name>Discover Files</name>
      <alias>df</alias>
    </boolopt>
  </section>
  <section>
    <name>path and file options</name>
    <listopt>
      <name>Lookup path</name>
      <alias>lpath</alias>
      <alias>lp</alias>
      <set_arg_label>path</set_arg_label>
      <short_desc>Path of locations to find matlab files</short_desc>
    </listopt>
    <listopt>
      <name>Input files</name>
      <alias>in</alias>
      <set_arg_label>file(s)</set_arg_label>
      <short_desc>Files to be used as input</short_desc>
      <long_desc>Files to be used as input. If no main file is specified then the first 
        file is taken to be the main.</long_desc>
    </listopt>
    <stropt>
      <name>main file</name>
      <alias>main</alias>
      <short_desc>file taken to be the main file and entry point of the program</short_desc>
      <long_desc>
        File taken to be the main file and entry point of the program. 
        Note: this can also be specified by a single file as argument to the compiler.
      </long_desc>
    </stropt>
  </section>


  <section>
    <name>Setting Natlab Stored Preferences</name>
    <boolopt>
      <name>perform preference operation</name>
      <alias>preferences</alias>      
      <alias>pref</alias>
      <short_desc>perform preference operation</short_desc>
      <long_desc>performs the specified preference operation(s), then exits</long_desc>
    </boolopt>
    <listopt>
      <name>Set Matlab Path</name>
      <alias>set_matlab_path</alias>
      <set_arg_label>path</set_arg_label>
      <short_desc>Set Path (all path dirs) of a Matlab installation</short_desc>
    </listopt>
    <listopt>
      <name>Add Matlab Path</name>
      <alias>add_matlab_path</alias>
      <set_arg_label>path</set_arg_label>
      <short_desc>adds the given paths to the Matlab installation path</short_desc>
    </listopt>
    <listopt>
      <name>Set Natlab Path</name>
      <alias>set_natlab_path</alias>
      <set_arg_label>path</set_arg_label>
      <short_desc>Set path directories where to find source code and packages</short_desc>
    </listopt>
    <listopt>
      <name>Add Natlab Path</name>
      <alias>add_natlab_path</alias>
      <set_arg_label>path</set_arg_label>
      <short_desc>adds the given paths to the Natlab path</short_desc>
    </listopt>
    <boolopt>
      <name>display preferences</name>
      <alias>show_preferences</alias>      
      <alias>show_pref</alias>
      <short_desc>Display all stored preferences</short_desc>
      <long_desc>Displays all the stored preferences</long_desc>
    </boolopt>
  </section>
</options>
